@page "/issue/{Id:int?}"

@using ServiceHealthReader.Data.Models
@using ServiceHealthReader.Data;
@using System.Text.Json;
@using System.Text.Json.Serialization;
@using Microsoft.Graph;

@inject HttpClient Http

<RadzenStack>

    <PageTitle>Issue details</PageTitle>

    <RadzenText TextStyle="TextStyle.H2">@title</RadzenText>

    <RadzenCard Class="rz-my-12 rz-mx-auto">
        <RadzenStack Orientation="Orientation.Vertical" JustifyContent="JustifyContent.Start" Gap="1rem" Class="rz-p-4">
            @if (showDetails)
            {
                <RadzenText TextStyle="TextStyle.H3">
                    Details
                </RadzenText>

                <RadzenPanel>
                    @if (issue?.TenantIssues != null)
                    {
                        <RadzenText TextStyle="TextStyle.Overline">
                            Geos
                        </RadzenText>
                        <RadzenText TextStyle="TextStyle.Body1">
                            @{
                                var geos = new List<string>();
                                foreach (var tenant in issue?.TenantIssues?.Select(x => x.Tenant))
                                {
                                    geos.Add(tenant.ServerInfo.OrderByDescending(x => x.Created).First()?.DataCenter);
                                }
                                <BlazorApp.Client.Components.Geolist Geos=geos></BlazorApp.Client.Components.Geolist>
                            }
                        </RadzenText>

                        <RadzenText TextStyle="TextStyle.Overline">
                            Rings
                        </RadzenText>
                        <RadzenText TextStyle="TextStyle.Body1">
                            <ul>
                            @foreach (var info in issue?.TenantIssues?.Select(x => x.Tenant).Select(x => x.ServerInfo).Distinct())
                            {
                                    foreach (var i in info)
                                    {
                                        <li>@i.Ring</li>
                                    }
                                }
                            </ul>
                        </RadzenText>
                    }
                </RadzenPanel>

                @if (issue != null && issue.ServiceHealthIssue != null)
                {
                    <RadzenText TextStyle="TextStyle.Overline">
                        Start time
                    </RadzenText>
                    <RadzenText TextStyle="TextStyle.Body1">
                        @issue?.ServiceHealthIssue?.StartDateTime
                    </RadzenText>

                    <RadzenText TextStyle="TextStyle.Overline">
                        End time
                    </RadzenText>
                    <RadzenText TextStyle="TextStyle.Body1">
                        @issue?.ServiceHealthIssue?.EndDateTime
                    </RadzenText>

                    <RadzenText TextStyle="TextStyle.Overline">
                        Impact
                    </RadzenText>
                    <RadzenText TextStyle="TextStyle.Body1">
                        @issue?.ServiceHealthIssue?.ImpactDescription
                    </RadzenText>

                    <RadzenText class="col-12">
                        @issue.ServiceHealthIssue.Classification?.ToString()
                    </RadzenText>
                    <RadzenText class="col-12">
                        @if (issue.ServiceHealthIssue.Details != null)
                        {
                            <ul>
                                @foreach (var d in issue.ServiceHealthIssue.Details)
                                {
                                    <RadzenRow RowGap="0">@d.Name: @d.Value</RadzenRow>
                                }
                            </ul>
                        }

                    </RadzenText>

                    <RadzenText TextStyle="TextStyle.Overline">
                        Feature
                    </RadzenText>
                    <RadzenText class="col-12">
                        @issue.ServiceHealthIssue.Feature (@issue.ServiceHealthIssue.FeatureGroup)
                    </RadzenText>

                    <RadzenText TextStyle="TextStyle.Overline">
                        Origin
                    </RadzenText>
                    <RadzenText class="col-12">
                        @issue.ServiceHealthIssue.Origin
                    </RadzenText>


                    <RadzenText>
                        <RadzenText TextStyle="TextStyle.H3">History</RadzenText>
                    </RadzenText>

                    <RadzenRow>
                        <span>Number of posts: @issue.ServiceHealthIssue?.Posts?.Count()</span>

                        <RadzenDataGrid Data="@issue.ServiceHealthIssue.Posts.OrderByDescending(x => x.CreatedDateTime)" TItem="ServiceHealthIssuePost">
                            <Columns>
                                <RadzenDataGridColumn TItem="ServiceHealthIssuePost" Property="CreatedDateTime" Title="Post date" />
                                <RadzenDataGridColumn TItem="ServiceHealthIssuePost" Property="Description" Title="Post content">
                                    <Template Context="data">
                                        @data.Description?.Content
                                    </Template>
                                </RadzenDataGridColumn>
                                <RadzenDataGridColumn TItem="ServiceHealthIssuePost" Property="PostType" Title="Post type" />
                            </Columns>
                        </RadzenDataGrid>

                    </RadzenRow>
                    <RadzenRow>
                        @if (issue.ServiceHealthIssue.Details != null)
                        {
                            @foreach (var x in issue.ServiceHealthIssue.Details)
                            {
                                <RadzenRow>
                                    <RadzenColumn> @x.Name </RadzenColumn>
                                    <RadzenColumn> @x.Value </RadzenColumn>
                                </RadzenRow>
                            }
                        }
                    </RadzenRow>
                }
            }

        </RadzenStack>
        <button class="btn btn-primary" @onclick="IncrementCount">Click me</button>
    </RadzenCard>
</RadzenStack>

@code {
    [Parameter]
    public int? Id { get; set; } = null;

    private bool showDetails = false;

    private string title = "";

    private Issue issue { get; set; }

    protected override async Task OnParametersSetAsync()
    {
        title = "Issue: " + Id;

        var str = await Http.GetStringAsync($"/api/Issue/{Id}");

        issue = JsonSerializer.Deserialize<Issue>(str, new JsonSerializerOptions()
            {
                ReferenceHandler = ReferenceHandler.Preserve,
                PropertyNameCaseInsensitive = true,
                PropertyNamingPolicy = null
            });

        if (issue == null) throw new ArgumentNullException("Can't have null here!");

        title = $"{issue.ServiceHealthIssue.Title} ({issue.ServiceHealthIssue.Id})";

        showDetails = true;

        await base.OnParametersSetAsync();
    }

    private void IncrementCount()
    {

    }
}