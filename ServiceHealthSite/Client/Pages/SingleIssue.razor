@page "/issue/{Id:int?}"

@using ServiceHealthReader.Data.Models
@using ServiceHealthReader.Data;

@inject HttpClient Http

<RadzenStack>

    <PageTitle>Issue details</PageTitle>

    <RadzenText TextStyle="TextStyle.H1">@title</RadzenText>

    <RadzenCard Class="rz-my-12 rz-mx-auto" Style="max-width: 420px">
        <RadzenStack Orientation="Orientation.Vertical" JustifyContent="JustifyContent.Start" Gap="1rem" Class="rz-p-4">
            @if (showDetails)
            {
                <RadzenText TextStyle="TextStyle.H3">
                    <h2>Details</h2>
                </RadzenText>
                <RadzenText TextStyle="TextStyle.H6">
                    <span>Start time:</span>
                    @issue?.ServiceHealthIssue?.StartDateTime
                </RadzenText>

                <RadzenText>
                    @issue?.ServiceHealthIssue?.ImpactDescription
                </RadzenText>

                <RadzenRow class="col-12">
                    <RadzenText TextStyle="TextStyle.H3">History</RadzenText>
                </RadzenRow>

                <RadzenRow>
                    @if (issue != null && issue.ServiceHealthIssue != null)
                    {
                        <RadzenRow class="col-12">
                            @issue.ServiceHealthIssue.Classification?.ToString()
                        </RadzenRow>
                        <RadzenRow class="col-12">
                            @if (issue.ServiceHealthIssue.Details != null)
                            {
                                <ul>
                                    @foreach (var d in issue.ServiceHealthIssue.Details)
                                    {
                                        <RadzenRow RowGap="0">@d.Name: @d.Value</RadzenRow>
                                    }
                                </ul>
                            }
                        </RadzenRow>
                        <RadzenRow class="col-12">
                            @issue.ServiceHealthIssue.Feature
                        </RadzenRow>
                        <RadzenRow class="col-12">
                            @issue.ServiceHealthIssue.FeatureGroup

                        </RadzenRow>
                        <RadzenRow class="col-12">
                            @issue.ServiceHealthIssue.ImpactDescription

                        </RadzenRow>
                        <RadzenRow class="col-12">

                            @if (issue.ServiceHealthIssue.Posts != null)
                            {
                                @foreach (var x in issue?.ServiceHealthIssue?.Posts)
                                {
                                    <RadzenRow RowGap="0">
                                        <RadzenColumn>@x.CreatedDateTime</RadzenColumn>
                                        <RadzenColumn>@x.Description</RadzenColumn>
                                    </RadzenRow>
                                }
                            }
                        </RadzenRow>
                        <RadzenRow>
                            @if (issue.ServiceHealthIssue.Details != null)
                            {
                                @foreach (var x in issue.ServiceHealthIssue.Details)
                                {
                                    <RadzenRow>
                                        <RadzenColumn> @x.Name </RadzenColumn>
                                        <RadzenColumn> @x.Value </RadzenColumn>
                                    </RadzenRow>
                                }
                            }
                        </RadzenRow>
                    }
                </RadzenRow>
            }

        </RadzenStack>
        <button class="btn btn-primary" @onclick="IncrementCount">Click me</button>
    </RadzenCard>
</RadzenStack>

@code {
    [Parameter]
    public int? Id { get; set; } = null;

    private bool showDetails = false;

    private string title = "";

    private Issue issue { get; set; }

    protected override async Task OnParametersSetAsync()
    {
        title = "Issue: " + Id;

        issue = await Http.GetFromJsonAsync<Issue>($"/api/Issue/{Id}");

        if (issue == null) throw new ArgumentNullException("Can't have null here!");

        title = $"{issue.ServiceHealthIssue.Title} ({issue.ServiceHealthIssue.Id})";

        showDetails = true;

        await base.OnParametersSetAsync();
    }

    private void IncrementCount()
    {

    }
}